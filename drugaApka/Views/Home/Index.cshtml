@model IEnumerable<drugaApka.Models.USERS>
@{
    ViewBag.Title = "Home";
}


<div class="jumbotron">
    <div class="container">
        <h1>Wynajem mieszkania</h1>
        <p>Strona porządkująca wpłaty oraz wspólne wydatki w wynajmowanym mieszkaniu.</p>
    </div>
</div>



<p><h2>Wpłata w następnym miesiącu</h2></p>


<div class="container-fluid">
    <div class="row">
        @{
            DateTime update = new DateTime();
            var balances = ViewBag.balances as IEnumerable<drugaApka.Models.BALANCES>;
            if (balances.Any() != false)
            {
                update = balances.LastOrDefault().validFrom;
            }

            }
        <div class="col-lg-3 col-lg-offset-9"><pre><strong>Aktualizacja:  <font size="4">@update.Date.ToString("dd/MM/yyyy")</font></strong></pre></div>
    </div>
</div>



<table class="table table-striped table-bordered table-hover">
    <tr>
        <th>Imię</th>
        <th>Za miesiąc</th>
        <th>Wpłata do dnia</th>
        <th>Kwota wpłaty</th>
        <th>Wpłacone</th>
        <th>Saldo</th>
    </tr>
    @{
        DateTime date = new DateTime();
        date = DateTime.Now;
        string payed = "";
        float? expensesValue = 0;
        if (Model.All(p => p.PAYS.Any() != false))
        {
            if (Model.All(p => p.PAYS.Any(x=>x.date.AddDays(3).Month == DateTime.Now.Month)))
            {
                date = DateTime.Now.AddMonths(1);
            }
        }
        if (Model.All(p=>p.USERS_EXPENSES.Any() != false))
        {
            expensesValue = Model.Where(k => k.USERS_EXPENSES != null).Sum(x => x.USERS_EXPENSES.Where(z=>z.EXPENSES.RentalFee != null && z.EXPENSES.ExpensePerMonth.ToLower() == date.ToString("MMMM").ToLower()).Sum(p => p.EXPENSES.RentalFee));
            expensesValue += Model.Where(k => k.USERS_EXPENSES != null).Sum(x => x.USERS_EXPENSES.Where(z => z.EXPENSES.Rent != null && z.EXPENSES.ExpensePerMonth.ToLower() == date.ToString("MMMM").ToLower()).Sum(p => p.EXPENSES.Rent));
            expensesValue += Model.Where(k => k.USERS_EXPENSES != null).Sum(x => x.USERS_EXPENSES.Where(z => z.EXPENSES.CurrentBill != null && z.EXPENSES.ExpensePerMonth.ToLower() == date.ToString("MMMM").ToLower()).Sum(p => p.EXPENSES.CurrentBill));
            expensesValue += Model.Where(k => k.USERS_EXPENSES != null).Sum(x => x.USERS_EXPENSES.Where(z => z.EXPENSES.GasBill != null && z.EXPENSES.ExpensePerMonth.ToLower() == date.ToString("MMMM").ToLower()).Sum(p => p.EXPENSES.GasBill));
            expensesValue += Model.Where(k => k.USERS_EXPENSES != null).Sum(x => x.USERS_EXPENSES.Where(z => z.EXPENSES.InternetBill != null && z.EXPENSES.ExpensePerMonth.ToLower() == date.ToString("MMMM").ToLower()).Sum(p => p.EXPENSES.InternetBill));
        }
            }
    @foreach (var item in Model)
            {
                if (item.PAYS.Any() != false)
                {
                    if (item.PAYS.Any(p=>p.date.AddDays(3).Month == date.Month))
                    {
                        payed = "success";
                    }
                    else
                    {
                        payed = "danger";
                    }
                }
                else
                {
                    payed = "danger";
                }
        <tr class="@payed">
            <td>
                @item.firstName
            </td>
            <td>
                @date.ToString("MMMM")
            </td>
            <td>
                04.@date.ToString("MM").2017

            </td>
            @if (payed == "success")
            {
                <td> </td>
            }
            else
            {
                if (item.BALANCES.Any() != false)
                {
                    var amount = 400 - @item.BALANCES.OrderBy(p=>p.BALANCE_ID).LastOrDefault().value;
                    <td>@String.Format("{0:c}", amount)</td>
                }
                else
                {
                    <td>400</td>
                }
            }

            @if (payed == "success")
            {
                <th>tak</th>
            }
            else
            {
                <th>nie</th>
            }

            @if (item.BALANCES.Any() != false)
            {
                <td>@String.Format("{0:c}", item.BALANCES.OrderBy(p => p.BALANCE_ID).LastOrDefault().value)</td>
            }
            else
            {
                <td>@String.Format("{0:c}", 0)</td>
            }

        </tr>
    }
</table>